local v0 = require(script.getIntrospectionQuery);
local v1 = require(script.buildASTSchema);
local v2 = require(script.printSchema);
local v3 = require(script.TypeInfo);
local v4 = require(script.typeComparators);
local v5 = require(script.assertValidName);
local v6 = require(script.findBreakingChanges);
return {
    getIntrospectionQuery = v0.getIntrospectionQuery, 
    getOperationAST = require(script.getOperationAST).getOperationAST, 
    getOperationRootType = require(script.getOperationRootType).getOperationRootType, 
    introspectionFromSchema = require(script.introspectionFromSchema).introspectionFromSchema, 
    buildClientSchema = require(script.buildClientSchema).buildClientSchema, 
    buildASTSchema = v1.buildASTSchema, 
    buildSchema = v1.buildSchema, 
    extendSchema = require(script.extendSchema).extendSchema, 
    lexicographicSortSchema = require(script.lexicographicSortSchema).lexicographicSortSchema, 
    printSchema = v2.printSchema, 
    printType = v2.printType, 
    printIntrospectionSchema = v2.printIntrospectionSchema, 
    typeFromAST = require(script.typeFromAST).typeFromAST, 
    valueFromAST = require(script.valueFromAST).valueFromAST, 
    valueFromASTUntyped = require(script.valueFromASTUntyped).valueFromASTUntyped, 
    astFromValue = require(script.astFromValue).astFromValue, 
    TypeInfo = v3.TypeInfo, 
    visitWithTypeInfo = v3.visitWithTypeInfo, 
    coerceInputValue = require(script.coerceInputValue).coerceInputValue, 
    concatAST = require(script.concatAST).concatAST, 
    separateOperations = require(script.separateOperations).separateOperations, 
    stripIgnoredCharacters = require(script.stripIgnoredCharacters).stripIgnoredCharacters, 
    isEqualType = v4.isEqualType, 
    isTypeSubTypeOf = v4.isTypeSubTypeOf, 
    doTypesOverlap = v4.doTypesOverlap, 
    assertValidName = v5.assertValidName, 
    isValidNameError = v5.isValidNameError, 
    BreakingChangeType = v6.BreakingChangeType, 
    DangerousChangeType = v6.DangerousChangeType, 
    findBreakingChanges = v6.findBreakingChanges, 
    findDangerousChanges = v6.findDangerousChanges
};
