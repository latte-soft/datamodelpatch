local v0 = {};
local v1 = require(script.version);
v0.version = v1.version;
v0.versionInfo = v1.versionInfo;
local v2 = require(script.graphql);
v0.graphql = v2.graphql;
v0.graphqlSync = v2.graphqlSync;
local v3 = require(script.type);
v0.GraphQLSchema = v3.GraphQLSchema;
v0.GraphQLDirective = v3.GraphQLDirective;
v0.GraphQLScalarType = v3.GraphQLScalarType;
v0.GraphQLObjectType = v3.GraphQLObjectType;
v0.GraphQLInterfaceType = v3.GraphQLInterfaceType;
v0.GraphQLUnionType = v3.GraphQLUnionType;
v0.GraphQLEnumType = v3.GraphQLEnumType;
v0.GraphQLInputObjectType = v3.GraphQLInputObjectType;
v0.GraphQLList = v3.GraphQLList;
v0.GraphQLNonNull = v3.GraphQLNonNull;
v0.specifiedScalarTypes = v3.specifiedScalarTypes;
v0.GraphQLInt = v3.GraphQLInt;
v0.GraphQLFloat = v3.GraphQLFloat;
v0.GraphQLString = v3.GraphQLString;
v0.GraphQLBoolean = v3.GraphQLBoolean;
v0.GraphQLID = v3.GraphQLID;
v0.specifiedDirectives = v3.specifiedDirectives;
v0.GraphQLIncludeDirective = v3.GraphQLIncludeDirective;
v0.GraphQLSkipDirective = v3.GraphQLSkipDirective;
v0.GraphQLDeprecatedDirective = v3.GraphQLDeprecatedDirective;
v0.GraphQLSpecifiedByDirective = v3.GraphQLSpecifiedByDirective;
v0.TypeKind = v3.TypeKind;
v0.DEFAULT_DEPRECATION_REASON = v3.DEFAULT_DEPRECATION_REASON;
v0.introspectionTypes = v3.introspectionTypes;
v0.__Schema = v3.__Schema;
v0.__Directive = v3.__Directive;
v0.__DirectiveLocation = v3.__DirectiveLocation;
v0.__Type = v3.__Type;
v0.__Field = v3.__Field;
v0.__InputValue = v3.__InputValue;
v0.__EnumValue = v3.__EnumValue;
v0.__TypeKind = v3.__TypeKind;
v0.SchemaMetaFieldDef = v3.SchemaMetaFieldDef;
v0.TypeMetaFieldDef = v3.TypeMetaFieldDef;
v0.TypeNameMetaFieldDef = v3.TypeNameMetaFieldDef;
v0.isSchema = v3.isSchema;
v0.isDirective = v3.isDirective;
v0.isType = v3.isType;
v0.isScalarType = v3.isScalarType;
v0.isObjectType = v3.isObjectType;
v0.isInterfaceType = v3.isInterfaceType;
v0.isUnionType = v3.isUnionType;
v0.isEnumType = v3.isEnumType;
v0.isInputObjectType = v3.isInputObjectType;
v0.isListType = v3.isListType;
v0.isNonNullType = v3.isNonNullType;
v0.isInputType = v3.isInputType;
v0.isOutputType = v3.isOutputType;
v0.isLeafType = v3.isLeafType;
v0.isCompositeType = v3.isCompositeType;
v0.isAbstractType = v3.isAbstractType;
v0.isWrappingType = v3.isWrappingType;
v0.isNullableType = v3.isNullableType;
v0.isNamedType = v3.isNamedType;
v0.isRequiredArgument = v3.isRequiredArgument;
v0.isRequiredInputField = v3.isRequiredInputField;
v0.isSpecifiedScalarType = v3.isSpecifiedScalarType;
v0.isIntrospectionType = v3.isIntrospectionType;
v0.isSpecifiedDirective = v3.isSpecifiedDirective;
v0.assertSchema = v3.assertSchema;
v0.assertDirective = v3.assertDirective;
v0.assertType = v3.assertType;
v0.assertScalarType = v3.assertScalarType;
v0.assertObjectType = v3.assertObjectType;
v0.assertInterfaceType = v3.assertInterfaceType;
v0.assertUnionType = v3.assertUnionType;
v0.assertEnumType = v3.assertEnumType;
v0.assertInputObjectType = v3.assertInputObjectType;
v0.assertListType = v3.assertListType;
v0.assertNonNullType = v3.assertNonNullType;
v0.assertInputType = v3.assertInputType;
v0.assertOutputType = v3.assertOutputType;
v0.assertLeafType = v3.assertLeafType;
v0.assertCompositeType = v3.assertCompositeType;
v0.assertAbstractType = v3.assertAbstractType;
v0.assertWrappingType = v3.assertWrappingType;
v0.assertNullableType = v3.assertNullableType;
v0.assertNamedType = v3.assertNamedType;
v0.getNullableType = v3.getNullableType;
v0.getNamedType = v3.getNamedType;
v0.validateSchema = v3.validateSchema;
v0.assertValidSchema = v3.assertValidSchema;
local v4 = require(script.language);
v0.Token = v4.Token;
v0.Source = v4.Source;
v0.Location = v4.Location;
v0.getLocation = v4.getLocation;
v0.printLocation = v4.printLocation;
v0.printSourceLocation = v4.printSourceLocation;
v0.Lexer = v4.Lexer;
v0.TokenKind = v4.TokenKind;
v0.parse = v4.parse;
v0.parseValue = v4.parseValue;
v0.parseType = v4.parseType;
v0.print = v4.print;
v0.visit = v4.visit;
v0.visitInParallel = v4.visitInParallel;
v0.getVisitFn = v4.getVisitFn;
v0.BREAK = v4.BREAK;
v0.REMOVE = v4.REMOVE;
v0.Kind = v4.Kind;
v0.DirectiveLocation = v4.DirectiveLocation;
v0.isDefinitionNode = v4.isDefinitionNode;
v0.isExecutableDefinitionNode = v4.isExecutableDefinitionNode;
v0.isSelectionNode = v4.isSelectionNode;
v0.isValueNode = v4.isValueNode;
v0.isTypeNode = v4.isTypeNode;
v0.isTypeSystemDefinitionNode = v4.isTypeSystemDefinitionNode;
v0.isTypeDefinitionNode = v4.isTypeDefinitionNode;
v0.isTypeSystemExtensionNode = v4.isTypeSystemExtensionNode;
v0.isTypeExtensionNode = v4.isTypeExtensionNode;
local v5 = require(script.execution);
v0.execute = v5.execute;
v0.executeSync = v5.executeSync;
v0.defaultFieldResolver = v5.defaultFieldResolver;
v0.defaultTypeResolver = v5.defaultTypeResolver;
v0.responsePathAsArray = v5.responsePathAsArray;
v0.getDirectiveValues = v5.getDirectiveValues;
local v6 = require(script.subscription);
v0.subscribe = v6.subscribe;
v0.createSourceEventStream = v6.createSourceEventStream;
local v7 = require(script.validation);
v0.validate = v7.validate;
v0.ValidationContext = v7.ValidationContext;
v0.specifiedRules = v7.specifiedRules;
v0.ExecutableDefinitionsRule = v7.ExecutableDefinitionsRule;
v0.FieldsOnCorrectTypeRule = v7.FieldsOnCorrectTypeRule;
v0.FragmentsOnCompositeTypesRule = v7.FragmentsOnCompositeTypesRule;
v0.KnownArgumentNamesRule = v7.KnownArgumentNamesRule;
v0.KnownDirectivesRule = v7.KnownDirectivesRule;
v0.KnownFragmentNamesRule = v7.KnownFragmentNamesRule;
v0.KnownTypeNamesRule = v7.KnownTypeNamesRule;
v0.LoneAnonymousOperationRule = v7.LoneAnonymousOperationRule;
v0.NoFragmentCyclesRule = v7.NoFragmentCyclesRule;
v0.NoUndefinedVariablesRule = v7.NoUndefinedVariablesRule;
v0.NoUnusedFragmentsRule = v7.NoUnusedFragmentsRule;
v0.NoUnusedVariablesRule = v7.NoUnusedVariablesRule;
v0.OverlappingFieldsCanBeMergedRule = v7.OverlappingFieldsCanBeMergedRule;
v0.PossibleFragmentSpreadsRule = v7.PossibleFragmentSpreadsRule;
v0.ProvidedRequiredArgumentsRule = v7.ProvidedRequiredArgumentsRule;
v0.ScalarLeafsRule = v7.ScalarLeafsRule;
v0.SingleFieldSubscriptionsRule = v7.SingleFieldSubscriptionsRule;
v0.UniqueArgumentNamesRule = v7.UniqueArgumentNamesRule;
v0.UniqueDirectivesPerLocationRule = v7.UniqueDirectivesPerLocationRule;
v0.UniqueFragmentNamesRule = v7.UniqueFragmentNamesRule;
v0.UniqueInputFieldNamesRule = v7.UniqueInputFieldNamesRule;
v0.UniqueOperationNamesRule = v7.UniqueOperationNamesRule;
v0.UniqueVariableNamesRule = v7.UniqueVariableNamesRule;
v0.ValuesOfCorrectTypeRule = v7.ValuesOfCorrectTypeRule;
v0.VariablesAreInputTypesRule = v7.VariablesAreInputTypesRule;
v0.VariablesInAllowedPositionRule = v7.VariablesInAllowedPositionRule;
v0.LoneSchemaDefinitionRule = v7.LoneSchemaDefinitionRule;
v0.UniqueOperationTypesRule = v7.UniqueOperationTypesRule;
v0.UniqueTypeNamesRule = v7.UniqueTypeNamesRule;
v0.UniqueEnumValueNamesRule = v7.UniqueEnumValueNamesRule;
v0.UniqueFieldDefinitionNamesRule = v7.UniqueFieldDefinitionNamesRule;
v0.UniqueDirectiveNamesRule = v7.UniqueDirectiveNamesRule;
v0.PossibleTypeExtensionsRule = v7.PossibleTypeExtensionsRule;
v0.NoDeprecatedCustomRule = v7.NoDeprecatedCustomRule;
v0.NoSchemaIntrospectionCustomRule = v7.NoSchemaIntrospectionCustomRule;
local v8 = require(script.error);
v0.GraphQLError = v8.GraphQLError;
v0.syntaxError = v8.syntaxError;
v0.locatedError = v8.locatedError;
v0.printError = v8.printError;
v0.formatError = v8.formatError;
local v9 = require(script.utilities);
v0.getIntrospectionQuery = v9.getIntrospectionQuery;
v0.getOperationAST = v9.getOperationAST;
v0.getOperationRootType = v9.getOperationRootType;
v0.introspectionFromSchema = v9.introspectionFromSchema;
v0.buildClientSchema = v9.buildClientSchema;
v0.buildASTSchema = v9.buildASTSchema;
v0.buildSchema = v9.buildSchema;
v0.extendSchema = v9.extendSchema;
v0.lexicographicSortSchema = v9.lexicographicSortSchema;
v0.printSchema = v9.printSchema;
v0.printType = v9.printType;
v0.printIntrospectionSchema = v9.printIntrospectionSchema;
v0.typeFromAST = v9.typeFromAST;
v0.valueFromAST = v9.valueFromAST;
v0.valueFromASTUntyped = v9.valueFromASTUntyped;
v0.astFromValue = v9.astFromValue;
v0.TypeInfo = v9.TypeInfo;
v0.visitWithTypeInfo = v9.visitWithTypeInfo;
v0.coerceInputValue = v9.coerceInputValue;
v0.concatAST = v9.concatAST;
v0.separateOperations = v9.separateOperations;
v0.stripIgnoredCharacters = v9.stripIgnoredCharacters;
v0.isEqualType = v9.isEqualType;
v0.isTypeSubTypeOf = v9.isTypeSubTypeOf;
v0.doTypesOverlap = v9.doTypesOverlap;
v0.assertValidName = v9.assertValidName;
v0.isValidNameError = v9.isValidNameError;
v0.BreakingChangeType = v9.BreakingChangeType;
v0.DangerousChangeType = v9.DangerousChangeType;
v0.findBreakingChanges = v9.findBreakingChanges;
v0.findDangerousChanges = v9.findDangerousChanges;
v0.NULL = require(script.luaUtils.null);
v0.stringify = require(script.luaUtils.stringify);
return v0;
