local v0 = {};
local l_Parent_0 = script.Parent;
local l_Parent_1 = l_Parent_0.Parent;
local l_Object_0 = require(l_Parent_1.LuauPolyfill).Object;
local l_DEV_0 = require(l_Parent_0.utilities).DEV;
local v5 = require(script.ApolloClient);
v0.ApolloClient = v5.ApolloClient;
v0.mergeOptions = v5.mergeOptions;
local v6 = require(script.ObservableQuery);
v0.applyNextFetchPolicy = v6.applyNextFetchPolicy;
v0.ObservableQuery = v6.ObservableQuery;
local _ = require(script.watchQueryOptions);
v0.NetworkStatus = require(script.networkStatus).NetworkStatus;
l_Object_0.assign(v0, (require(script.types)));
local _ = require(script.LocalState);
local v9 = require(script.Parent.errors);
v0.isApolloError = v9.isApolloError;
v0.ApolloError = v9.ApolloError;
local v10 = require(script.Parent.cache);
v0.ApolloCache = v10.ApolloCache;
v0.defaultDataIdFromObject = v10.defaultDataIdFromObject;
v0.InMemoryCache = v10.InMemoryCache;
v0.MissingFieldError = v10.MissingFieldError;
v0.makeVar = v10.makeVar;
v0.None = v10.None;
l_Object_0.assign(v0, (require(script.Parent.cache.inmemory.types)));
l_Object_0.assign(v0, (require(script.Parent.link.core)));
l_Object_0.assign(v0, (require(script.Parent.link.http)));
local v11 = require(script.Parent.link.utils);
v0.fromError = v11.fromError;
v0.toPromise = v11.toPromise;
v0.fromPromise = v11.fromPromise;
v0.throwServerError = v11.throwServerError;
local v12 = require(script.Parent.utilities);
v0.Observable = v12.Observable;
v0.isReference = v12.isReference;
v0.makeReference = v12.makeReference;
v0.NULL = v12.NULL;
local l_setVerbosity_0 = require(l_Parent_0.jsutils.invariant).setVerbosity;
v0.setLogVerbosity = l_setVerbosity_0;
l_setVerbosity_0(not l_DEV_0 and "silent" or "log");
local v14 = require(l_Parent_1.GraphQLTag);
v0.gql = v14.default;
v0.resetCaches = v14.resetCaches;
v0.disableFragmentWarnings = v14.disableFragmentWarnings;
v0.enableExperimentalFragmentVariables = v14.enableExperimentalFragmentVariables;
v0.disableExperimentalFragmentVariables = v14.disableExperimentalFragmentVariables;
return v0;
