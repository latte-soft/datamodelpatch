local v0 = require(script.views.NavigationContext);
return {
    createAppContainer = require(script.createAppContainer).createAppContainer, 
    getNavigation = require(script.getNavigation), 
    Context = v0, 
    Provider = v0.Provider, 
    Consumer = v0.Consumer, 
    withNavigation = require(script.views.withNavigation), 
    withNavigationFocus = require(script.views.withNavigationFocus), 
    createRobloxStackNavigator = require(script.navigators.createRobloxStackNavigator), 
    createRobloxSwitchNavigator = require(script.navigators.createRobloxSwitchNavigator), 
    createSwitchNavigator = require(script.navigators.createSwitchNavigator), 
    createNavigator = require(script.navigators.createNavigator), 
    StackRouter = require(script.routers.StackRouter), 
    SwitchRouter = require(script.routers.SwitchRouter), 
    TabRouter = require(script.routers.TabRouter), 
    DontMatchEmptyPath = require(script.routers:FindFirstChild("NullPathSymbol.roblox")), 
    Actions = require(script.NavigationActions), 
    StackActions = require(script.routers.StackActions), 
    SwitchActions = require(script.routers.SwitchActions), 
    BackBehavior = require(script.BackBehavior), 
    Events = require(script.Events), 
    NavigationEvents = require(script.views.NavigationEvents), 
    None = require(script.Parent.LuauPolyfill).Object.None, 
    StackPresentationStyle = require(script.views.RobloxStackView.StackPresentationStyle), 
    StackViewTransitionConfigs = require(script.views.RobloxStackView.StackViewTransitionConfigs), 
    SceneView = require(script.views.SceneView), 
    RobloxSwitchView = require(script.views.RobloxSwitchView), 
    RobloxStackView = require(script.views.RobloxStackView.StackView), 
    createConfigGetter = require(script.routers.createConfigGetter), 
    getScreenForRouteName = require(script.routers.getScreenForRouteName), 
    validateRouteConfigMap = require(script.routers.validateRouteConfigMap), 
    getActiveChildNavigationOptions = require(script.utils.getActiveChildNavigationOptions)
};
