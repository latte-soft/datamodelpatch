return "  scalar JSONObject\n\n  type OmniFeed {\n    metadata: OmniFeedMetadata\n    pageType: String\n    sortsExpirationTime: Int\n    nextPageToken: String\n    isSessionExpired: Boolean\n    # recommendationsId is used to post session data to the recommendations service.\n    # In the future, this may be replaced with a Recommendation type that contains\n    # more metadata, e.g. for IXP.\n    recommendationsId: String\n    globalLayoutData: JSONObject\n    omniSessionId: String\n    sorts: [OmniFeedItem]\n  }\n\n  # Provides a compatibility layer with Rodux.\n  # This should eventually be removed in favor of merging data into the FeedItemContent\n  type OmniFeedMetadata {\n    GameJSON: JSONObject @deprecated(reason: \"Fetch game metadata from OmniFeedItem instead. Scheduled for deprecation on 2023-01-30\")\n    CatalogAssetJSON: JSONObject\n    CatalogBundleJSON: JSONObject\n    RecommendedFriendJSON: JSONObject\n  }\n\n  type OmniFeedItem {\n    topicId: String\n    topic: String\n    topicLayoutData: JSONObject\n    treatmentType: String\n    recommendations: [OmniFeedRecommendation]\n    # In the future, the OmniFeedItem may also include friends, assets, etc.\n    # These can be added as nullable types, or split out into separate\n    # implementations of a generic FeedItem interface.\n    experiences: [Experience]\n  }\n\n  type OmniFeedRecommendation {\n    contentType: String\n    contentId: String\n    contentMetadata: JSONObject\n  }\n\n  type OmniFeedItemWithMetadata {\n    metadata: OmniFeedMetadata\n    sort: OmniFeedItem\n  }\n\n  input OmniFeedRecommendationDescriptor {\n    contentId: String\n    contentType: String\n  }\n\n  type Query {\n    omniFeed(sessionId: String, pageType: String, nextPageToken: String, supportedTreatmentTypes: [String]): OmniFeed\n    omniFeedItem(sortId: String OmniFeedItem\n    refreshOmniFeedItem(sessionId: String String [OmniFeedRecommendationDescriptor]): OmniFeedItemWithMetadata\n  }\n";
