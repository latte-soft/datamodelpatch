local l_gql_0 = require(script:FindFirstAncestor("ApolloLocalState").Parent.ApolloClient).gql;
return {
    omniFeed = l_gql_0("  query Feed($sessionId: String, $pageType: String, $nextPageToken: String, $supportedTreatmentTypes: [String]) {\n    omniFeed(sessionId: $sessionId, pageType: $pageType, nextPageToken: $nextPageToken, supportedTreatmentTypes: $supportedTreatmentTypes) {\n      nextPageToken\n      omniSessionId\n      recommendationsId\n      pageType\n      globalLayoutData\n      sorts {\n        topic\n        topicId\n        topicLayoutData\n        treatmentType\n        recommendations {\n          contentId\n          contentMetadata\n          contentType\n        }\n      }\n    }\n  }\n"), 
    omniFeedWithMetadata = l_gql_0("  query Feed($sessionId: String, $pageType: String, $nextPageToken: String, $supportedTreatmentTypes: [String]) {\n    omniFeed(sessionId: $sessionId, pageType: $pageType, nextPageToken: $nextPageToken, supportedTreatmentTypes: $supportedTreatmentTypes) {\n      metadata {\n        GameJSON\n        CatalogBundleJSON\n        CatalogAssetJSON\n        RecommendedFriendJSON\n      }\n      isSessionExpired\n      nextPageToken\n      omniSessionId\n      pageType\n      globalLayoutData\n      recommendationsId\n      sortsExpirationTime\n      sorts {\n        topic\n        topicId\n        topicLayoutData\n        treatmentType\n        recommendations {\n          contentId\n          contentMetadata\n          contentType\n        }\n      }\n    }\n  }\n")
};
